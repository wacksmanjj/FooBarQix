package com.valtech.foobarqix;

import java.util.ArrayList;
import java.util.List;

import com.vaadin.annotations.AutoGenerated;
import com.vaadin.data.util.ObjectProperty;
import com.vaadin.ui.Alignment;
import com.vaadin.ui.Button;
import com.vaadin.ui.Button.ClickEvent;
import com.vaadin.ui.Button.ClickListener;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.HorizontalLayout;
import com.vaadin.ui.Label;
import com.vaadin.ui.Panel;
import com.vaadin.ui.TextArea;
import com.vaadin.ui.VerticalLayout;
import com.valtech.foobarqix.engine.FooBarQixEngine;

@SuppressWarnings("serial")
public class FooBarQixView extends CustomComponent {

	@AutoGenerated
	private VerticalLayout mainLayout;
	@AutoGenerated
	private Panel panel_1;
	@AutoGenerated
	private VerticalLayout verticalLayout_2;
	@AutoGenerated
	private TextArea consoleTxtArea;
	@AutoGenerated
	private VerticalLayout resultsLayout;
	@AutoGenerated
	private HorizontalLayout actionsBtnsLayout;
	@AutoGenerated
	private Button resetButton;
	@AutoGenerated
	private Button startButton;

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	private int[] data = new int[100];
	
	private List<ObjectProperty<String>> properties;
	
	/**
	 * The constructor should first build the main layout, set the
	 * composition root and then do any custom initialization.
	 *
	 * The constructor will not be automatically regenerated by the
	 * visual editor.
	 */
	public FooBarQixView() {
		buildMainLayout();
		setCompositionRoot(mainLayout);

		init();
	}
	
	private void init() {

		properties = new ArrayList<ObjectProperty<String>>();
		
		resetContainer();
		
		startButton.addListener(buildOnStartClickListener());
		resetButton.addListener(buildOnResetClickListener());
		
		updateConsole("");
		
	}
	
	private void updateConsole(String content) {
		consoleTxtArea.setReadOnly(false);
		consoleTxtArea.setValue(content);
		consoleTxtArea.setReadOnly(true);
	}
	
	private void resetContainer() {
		resultsLayout.removeAllComponents();
		properties.clear();
		
		for (int i = 0; i < data.length; i++) {
			data[i] = i+1;
		}
		for (int i = 0 ; i < data.length ; i+=10) {
			
			HorizontalLayout line = new HorizontalLayout();
			line.setWidth("100.0%");
			line.setHeight("-1px");
			line.setSpacing(true);
			
			for (int j = 0; j < 10; j++) {
				Label number = new Label();
				number.setWidth("100px");
				
				ObjectProperty<String> property = new ObjectProperty<String>(""+data[i+j], String.class);
				properties.add(property);
				
				number.setPropertyDataSource(property);
				
				line.addComponent(number);
			}
			
			resultsLayout.addComponent(line);
		}
	}
	
	private ClickListener buildOnStartClickListener() {
		return new ClickListener() {
			
			@Override
			public void buttonClick(ClickEvent event) {
				startButton.setEnabled(false);
				resetButton.setEnabled(true);
				new FooBarQixEngine().compute(properties);
			}
		};
	}
	
	private ClickListener buildOnResetClickListener() {
		return new ClickListener() {
			
			@Override
			public void buttonClick(ClickEvent event) {
				startButton.setEnabled(true);
				resetButton.setEnabled(false);
				resetContainer();
				updateConsole("");
			}
		};
	}

	@AutoGenerated
	private VerticalLayout buildMainLayout() {
		// common part: create layout
		mainLayout = new VerticalLayout();
		mainLayout.setImmediate(false);
		mainLayout.setWidth("100%");
		mainLayout.setHeight("100%");
		mainLayout.setMargin(false);
		
		// top-level component properties
		setWidth("100.0%");
		setHeight("100.0%");
		
		// panel_1
		panel_1 = buildPanel_1();
		mainLayout.addComponent(panel_1);
		mainLayout.setComponentAlignment(panel_1, new Alignment(48));
		
		return mainLayout;
	}

	@AutoGenerated
	private Panel buildPanel_1() {
		// common part: create layout
		panel_1 = new Panel();
		panel_1.setCaption("Welcome to FooBarQix !");
		panel_1.setImmediate(false);
		panel_1.setWidth("100.0%");
		panel_1.setHeight("100.0%");
		
		// verticalLayout_2
		verticalLayout_2 = buildVerticalLayout_2();
		panel_1.setContent(verticalLayout_2);
		
		return panel_1;
	}

	@AutoGenerated
	private VerticalLayout buildVerticalLayout_2() {
		// common part: create layout
		verticalLayout_2 = new VerticalLayout();
		verticalLayout_2.setImmediate(false);
		verticalLayout_2.setWidth("100.0%");
		verticalLayout_2.setHeight("100.0%");
		verticalLayout_2.setMargin(true);
		verticalLayout_2.setSpacing(true);
		
		// actionsBtnsLayout
		actionsBtnsLayout = buildActionsBtnsLayout();
		verticalLayout_2.addComponent(actionsBtnsLayout);
		verticalLayout_2.setComponentAlignment(actionsBtnsLayout,
				new Alignment(48));
		
		// resultsLayout
		resultsLayout = new VerticalLayout();
		resultsLayout.setImmediate(false);
		resultsLayout.setWidth("-1px");
		resultsLayout.setHeight("100.0%");
		resultsLayout.setMargin(false);
		verticalLayout_2.addComponent(resultsLayout);
		verticalLayout_2.setExpandRatio(resultsLayout, 1.0f);
		verticalLayout_2
				.setComponentAlignment(resultsLayout, new Alignment(48));
		
		// consoleTxtArea
		consoleTxtArea = new TextArea();
		consoleTxtArea.setCaption("Console output");
		consoleTxtArea.setImmediate(false);
		consoleTxtArea.setWidth("100.0%");
		consoleTxtArea.setHeight("300px");
		verticalLayout_2.addComponent(consoleTxtArea);
		verticalLayout_2.setComponentAlignment(consoleTxtArea,
				new Alignment(48));
		
		return verticalLayout_2;
	}

	@AutoGenerated
	private HorizontalLayout buildActionsBtnsLayout() {
		// common part: create layout
		actionsBtnsLayout = new HorizontalLayout();
		actionsBtnsLayout.setImmediate(false);
		actionsBtnsLayout.setWidth("-1px");
		actionsBtnsLayout.setHeight("-1px");
		actionsBtnsLayout.setMargin(false);
		actionsBtnsLayout.setSpacing(true);
		
		// startButton
		startButton = new Button();
		startButton.setCaption("Start");
		startButton.setImmediate(true);
		startButton.setWidth("-1px");
		startButton.setHeight("-1px");
		actionsBtnsLayout.addComponent(startButton);
		actionsBtnsLayout.setComponentAlignment(startButton, new Alignment(48));
		
		// resetButton
		resetButton = new Button();
		resetButton.setCaption("Reset");
		resetButton.setImmediate(true);
		resetButton.setWidth("-1px");
		resetButton.setHeight("-1px");
		actionsBtnsLayout.addComponent(resetButton);
		
		return actionsBtnsLayout;
	}

}
